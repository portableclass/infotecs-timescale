name: .NET Build & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run tests with coverage
      run: |
        cd TimeScaleAPI.UnitTests
        dotnet test --no-build --configuration Release \
          --verbosity normal \
          --collect:"XPlat Code Coverage"

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Convert coverage to lcov
      run: |
        export PATH="$PATH:$HOME/.dotnet/tools"
        REPORT_PATH=$(find . -type f -name 'coverage.cobertura.xml' | head -n 1)
        reportgenerator -reports:$REPORT_PATH -targetdir:coverage -reporttypes:lcov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
